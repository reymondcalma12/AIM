@model AIM.Models.User

@{
    ViewData["Title"] = "Change Password";
}

@if (!ViewData.ModelState.IsValid)
{
    <script>
        alert('@ViewData.ModelState.Values.SelectMany(v => v.Errors).FirstOrDefault()?.ErrorMessage');
    </script>
}

<div class="row">
    <div class="col-md-4 mx-auto">
        <form asp-action="ChangePassword" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden"  asp-for="UserCode" value="@ViewBag.UserCode" />

            <div class="form-group">
                <label for="CurrentPass" class="control-label">Current Password</label>
                <input for="CurrentPass" type="password" class="form-control" name="CurrentPass" id="CurrentPass" />
                <span for="CurrentPass" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="UserPass" class="control-label">Enter New Password</label>
                <div class="input-group">
                    <input id="newPassword" asp-for="UserPass" type="password" class="form-control" name="newPassword" />
                    <div class="input-group-append">
                        <span class="input-group-text  p-3 bg-transparent  border-start-0" style="border-radius:0;">
                            <i id="toggleNewPassword" class="fa fa-eye"></i>
                        </span>
                    </div>
                </div>
                <span asp-validation-for="UserPass" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="NewPass" class="control-label">Confirm Password</label>
                <div class="input-group">
                    <input id="confirmPassword" for="NewPass" type="password" class="form-control" name="confirmPassword" />
                    <div class="input-group-append">
                        <span class="input-group-text p-3 bg-transparent outline-  border-start-0" style="border-radius:0;">
                            <i id="toggleConfirmPassword" class="fas fa-eye"></i>
                        </span>
                    </div>
                </div>
                <span for="NewPass" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary " id="submit" />
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

@{
    var errorMessage = TempData["ErrorMessage"] as string;
    if (!string.IsNullOrEmpty(errorMessage))
    {
        <script>
            alert("@errorMessage");
        </script>
    }
}

<script>
    $(document).ready(function () {
        $(".form-control").css({
            "box-shadow": "none",
        });

        let newpass = $("#newPassword");
        let newpassborder = $(".input-group > #newPassword")

        let confirmpass = $("#confirmPassword");
        let confirmpassborder = $(".input-group > #confirmPassword")



            
      
       

        $("#toggleNewPassword").click(function () {
            togglePasswordVisibility("newPassword");
        });

        $("#toggleConfirmPassword").click(function () {
            togglePasswordVisibility("confirmPassword");
        });

        function togglePasswordVisibility(inputId) {
            var inputElement = $("#" + inputId);
            var iconElement = $("#toggle" + inputId.charAt(0).toUpperCase() + inputId.slice(1));

            if (inputElement.attr("type") === "password") {
                inputElement.attr("type", "text");
                iconElement.removeClass("fa-eye").addClass("fa-eye-slash");
            } else {
                inputElement.attr("type", "password");
                iconElement.removeClass("fa-eye-slash").addClass("fa-eye");
            }
        }
    });
</script>
